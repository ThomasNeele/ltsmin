# include the general include file which contains the functions
source $srcdir/lib/include.tcl

# use the local uncluding file containing several procedures
source $srcdir/lib/backends.tcl

#cd into the test dir such that output files are placed here.
if { [file exists $binpaths(out) ] != 1 } {
    file mkdir $binpaths(out)
}
cd $binpaths(out)

puts "\n----------------------------------------------"
puts   "TESTING: Algorithmic backends for ProB front-end"
puts   "----------------------------------------------\n"


# the number of threads to use in multithreaded backends
set num_threads 2

# Language ProB-frontends:
# -------------------
set langs [dict create]
# a model per language
dict set langs prob model "MutexSimple.mch" 
dict set langs prob options mc "--threads=$num_threads"

dict set langs prob exp_output "10 states 23 transitions"
set alg_be [ find_alg_backends "{seq,dist,mc}" ]
run_test_for_alg_backends $alg_be $langs $backends

# different output for symbolic tool:
dict set langs prob exp_output "state space has 10"
dict set backends sym params "--order=" {bfs-prev}
dict set backends sym params "--saturation=" {none}
dict set backends sym params "--vset=" {"lddmc --lace-workers=2 --lddmc-tablesize=20 --lddmc-maxtablesize=20 --lddmc-cachesize=20 --lddmc-maxcachesize=20"}
dict set backends sym options {""}
set alg_be [ find_alg_backends "{sym}" ]
run_test_for_alg_backends $alg_be $langs $backends

cd ".."
